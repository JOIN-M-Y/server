definitions:
  dto.Account:
    properties:
      email:
        example: test@test.com
        type: string
      password:
        example: testpassword
        type: string
    type: object
  model.Account:
    properties:
      UpdatedAt:
        example: "2019-12-23 12:27:37"
        type: string
      createdAt:
        example: "2019-12-23 12:27:37"
        type: string
      email:
        example: test@test.com
        type: string
      id:
        example: 389df385-ccaa-49c1-aee2-698ba1191857
        type: string
      password:
        example: testpassword
        type: string
    type: object
  model.Accounts:
    items:
      properties:
        UpdatedAt:
          example: "2019-12-23 12:27:37"
          type: string
        createdAt:
          example: "2019-12-23 12:27:37"
          type: string
        email:
          example: test@test.com
          type: string
        id:
          example: 389df385-ccaa-49c1-aee2-698ba1191857
          type: string
        password:
          example: testpassword
          type: string
      type: object
    type: array
info:
  contact: {}
  license: {}
paths:
  /accounts:
    get:
      consumes:
      - application/json
      parameters:
      - description: account email
        in: query
        name: email
        required: true
        type: string
      - description: account password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Accounts'
      tags:
      - Accounts
    post:
      consumes:
      - application/json
      description: create account group
      parameters:
      - description: Add account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/dto.Account'
          type: object
      produces:
      - application/json
      responses:
        "200": {}
      tags:
      - Accounts
  /accounts/{id}:
    delete:
      description: delete account by id
      parameters:
      - description: account ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200": {}
      tags:
      - Accounts
    get:
      consumes:
      - application/json
      parameters:
      - description: account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Account'
      tags:
      - Accounts
    put:
      consumes:
      - application/json
      description: create account group
      parameters:
      - description: account ID
        in: path
        name: id
        required: true
        type: string
      - description: Add account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/dto.Account'
          type: object
      produces:
      - application/json
      responses:
        "200": {}
      tags:
      - Accounts
swagger: "2.0"
